# docker-compose.yml

services:
  postgres:
    image: postgres:15-alpine
    container_name: ape_chat_db
    environment:
      POSTGRES_USER: apeuser
      POSTGRES_PASSWORD: apepass
      POSTGRES_DB: apechat
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U apeuser -d apechat"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ape_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ape_chat_backend
    environment:
      - DB_HOST=postgres
      - DB_USER=apeuser
      - DB_PASSWORD=apepass
      - DB_NAME=apechat
      - DB_PORT=5432
      - JWT_SECRET=your-super-secret-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - ape_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ape_chat_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - ape_network
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf

networks:
  ape_network:
    driver: bridge

volumes:
  postgres_data:
    name: ape_chat_postgres_data